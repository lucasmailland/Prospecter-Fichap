generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id                       String    @id @default(cuid())
  firstName                String?
  lastName                 String?
  name                     String?   // Mantenemos por compatibilidad con NextAuth
  email                    String    @unique
  emailVerified            DateTime?
  image                    String?
  password                 String
  role                     UserRole  @default(USER)
  linkedin                 String?
  twoFactorEnabled         Boolean   @default(false)
  twoFactorSecret          String?
  twoFactorBackupCodes     String?
  resetToken               String?
  resetTokenExpires        DateTime?
  emailVerificationToken   String?
  emailVerificationExpires DateTime?
  lastLogin                DateTime?
  loginFailures            Int       @default(0)
  accountLocked            Boolean   @default(false)
  accountLockedUntil       DateTime?
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  accounts                 Account[]
  sessions                 Session[]
  leads                    Lead[]
  openAIConfig             OpenAIConfig?
  promptTemplates          PromptTemplate[]
  aiGenerations            AIGeneration[]
  aiConversations          AIConversation[]
  aiUsageStats             AIUsageStats[]
  
  // Task Management
  assignedTasks            Task[]

  @@map("users")
}

model Lead {
  id                     String          @id @default(cuid())
  firstName              String?
  lastName               String?
  fullName               String?
  email                  String          @unique
  phone                  String?
  company                String?
  jobTitle               String?
  website                String?
  linkedinUrl            String?
  companySize            String?
  industry               String?
  location               String?
  country                String?
  city                   String?
  state                  String?
  timezone               String?
  language               String?
  isEmailValid           Boolean         @default(false)
  emailValidationScore   Float?
  emailValidationDetails String?
  score                  Float           @default(0)
  priority               Int             @default(0)
  scoringFactors         String?
  status                 LeadStatus      @default(NEW)
  source                 LeadSource      @default(MANUAL)
  hubspotId              String?
  notes                  String?
  metadata               String?
  createdAt              DateTime        @default(now())
  updatedAt              DateTime        @updatedAt
  enrichedAt             DateTime?
  validatedAt            DateTime?
  lastContactedAt        DateTime?
  userId                 String
  enrichments            EnrichmentLog[]
  hubspotContact         HubSpotContact?
  leadScores             LeadScore[]
  conversationAnalyses   ConversationAnalysis[]
  aiGenerations          AIGeneration[]
  aiInsights             AIInsight[]
  user                   User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Nuevas relaciones de HubSpot
  hubspotDeals           HubSpotDeal[]
  hubspotTasks           HubSpotTask[]
  hubspotEmails          HubSpotEmail[]
  hubspotCalls           HubSpotCall[]
  hubspotMeetings        HubSpotMeeting[]
  hubspotNotes           HubSpotNote[]
  
  // Task Management
  tasks                  Task[]

  @@index([userId])
  @@index([email])
  @@index([status])
  @@index([score])
  @@index([priority])
  @@index([createdAt])
  @@index([company])
  @@index([hubspotId])
  @@map("leads")
}

model EnrichmentLog {
  id           String           @id @default(cuid())
  leadId       String
  type         String
  provider     String
  status       EnrichmentStatus @default(PENDING)
  data         String?
  error        String?
  responseTime Int?
  cost         Float?
  createdAt    DateTime         @default(now())
  lead         Lead             @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@index([leadId])
  @@index([provider])
  @@index([status])
  @@index([createdAt])
  @@map("enrichment_logs")
}

model Analytics {
  id        String   @id @default(cuid())
  userId    String
  date      DateTime @default(now())
  type      String
  metrics   String
  createdAt DateTime @default(now())

  @@unique([userId, date, type])
  @@index([userId])
  @@index([date])
  @@index([type])
  @@map("analytics")
}

// ========================================================================================
// HUBSPOT MODELS
// ========================================================================================

model HubSpotContact {
  id                    String                 @id @default(cuid())
  hubspotId             String                 @unique
  leadId                String?                @unique
  email                 String
  firstName             String?
  lastName              String?
  company               String?
  jobTitle              String?
  phone                 String?
  website               String?
  linkedinUrl           String?
  country               String?
  state                 String?
  city                  String?
  industry              String?
  numEmployees          String?
  annualRevenue         String?
  lifecycleStage        String?
  leadStatus            String?
  hsLeadStatus          String?
  hubspotOwnerId        String?
  timezone              String?
  lastActivityDate      DateTime?
  hubspotCreateDate     DateTime?
  hubspotModifiedDate   DateTime?
  syncedAt              DateTime              @default(now())
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  lead                  Lead?                 @relation(fields: [leadId], references: [id], onDelete: Cascade)
  emailMetrics          HubSpotEmailMetrics?
  conversations         HubSpotConversation[]
  activities            HubSpotActivity[]
  
  // Nuevas relaciones
  deals                 HubSpotDeal[]
  tasks                 HubSpotTask[]
  emails                HubSpotEmail[]
  calls                 HubSpotCall[]
  meetings              HubSpotMeeting[]
  notes                 HubSpotNote[]
  documents             HubSpotDocument[]
  socialInsights        HubSpotSocialInsight[]

  @@index([hubspotId])
  @@index([email])
  @@index([leadId])
  @@index([syncedAt])
  @@map("hubspot_contacts")
}

model HubSpotEmailMetrics {
  id               String         @id @default(cuid())
  contactId        String         @unique
  emailsSent       Int            @default(0)
  emailsOpened     Int            @default(0)
  emailsClicked    Int            @default(0)
  emailsReplied    Int            @default(0)
  emailsBounced    Int            @default(0)
  openRate         Float          @default(0)
  clickRate        Float          @default(0)
  replyRate        Float          @default(0)
  lastEmailDate    DateTime?
  lastOpenDate     DateTime?
  lastClickDate    DateTime?
  calculatedAt     DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  contact          HubSpotContact @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@index([contactId])
  @@index([calculatedAt])
  @@map("hubspot_email_metrics")
}

model HubSpotConversation {
  id            String         @id @default(cuid())
  hubspotId     String         @unique
  threadId      String
  contactId     String
  subject       String?
  content       String
  htmlContent   String?
  timestamp     DateTime
  direction     String // 'INCOMING' | 'OUTGOING'
  emailStatus   String? // 'SENT' | 'DELIVERED' | 'OPENED' | 'CLICKED' | 'BOUNCED'
  attachments   String? // JSON string
  syncedAt      DateTime       @default(now())
  createdAt     DateTime       @default(now())
  contact       HubSpotContact @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@index([hubspotId])
  @@index([contactId])
  @@index([threadId])
  @@index([timestamp])
  @@index([direction])
  @@map("hubspot_conversations")
}

model HubSpotActivity {
  id             String         @id @default(cuid())
  hubspotId      String         @unique
  contactId      String
  activityType   String // 'EMAIL' | 'CALL' | 'MEETING' | 'TASK' | 'NOTE'
  timestamp      DateTime
  subject        String?
  body           String?
  outcome        String?
  duration       Int? // en minutos
  meetingOutcome String?
  syncedAt       DateTime       @default(now())
  createdAt      DateTime       @default(now())
  contact        HubSpotContact @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@index([hubspotId])
  @@index([contactId])
  @@index([activityType])
  @@index([timestamp])
  @@map("hubspot_activities")
}

// ========================================================================================
// NUEVOS MODELOS HUBSPOT COMPLETOS
// ========================================================================================

model HubSpotCompany {
  id                   String   @id @default(cuid())
  hubspotId           String   @unique
  name                String
  domain              String?
  industry            String?
  city                String?
  state               String?
  country             String?
  phone               String?
  website             String?
  numEmployees        String?
  annualRevenue       String?
  description         String?
  foundedYear         String?
  companyType         String?
  hsLeadStatus        String?
  lifecycleStage      String?
  hubspotOwnerId      String?
  createDate          DateTime?
  lastModifiedDate    DateTime?
  linkedinPage        String?
  twitterHandle       String?
  facebookPage        String?
  
  // Advanced fields
  totalMoneyRaised    String?
  recentDealAmount    String?
  recentDealCloseDate String?
  numAssociatedContacts String?
  numAssociatedDeals  String?
  daysToClose         String?
  hsAnalyticsSource   String?
  
  // Custom properties
  customProperties    Json?
  
  // Timestamps
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  // Relations
  deals               HubSpotDeal[]

  @@map("hubspot_companies")
}

model HubSpotDeal {
  id                    String   @id @default(cuid())
  hubspotId            String   @unique
  dealName             String
  amount               String?
  dealStage            String
  pipeline             String?
  closeDate            DateTime?
  createDate           DateTime?
  hubspotOwnerId       String?
  dealCurrencyCode     String?
  dealType             String?
  hsAnalyticsSource    String?
  hsCampaign           String?
  hsDealStageProbability String?
  hsForecastAmount     String?
  hsForecastProbability String?
  hsIsClosed           String?
  hsIsClosedWon        String?
  hsNextStep           String?
  numContactedNotes    String?
  numNotes             String?
  numAssociatedContacts String?
  description          String?
  
  // Custom properties
  customProperties     Json?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  leadId               String?
  lead                 Lead?    @relation(fields: [leadId], references: [id])
  contactId            String?
  contact              HubSpotContact? @relation(fields: [contactId], references: [id])
  companyId            String?
  company              HubSpotCompany? @relation(fields: [companyId], references: [id])

  @@map("hubspot_deals")
}

model HubSpotTask {
  id                    String   @id @default(cuid())
  hubspotId            String   @unique
  taskSubject          String
  taskBody             String?
  taskStatus           String   @default("NOT_STARTED")
  taskPriority         String   @default("MEDIUM")
  taskType             String   @default("TODO")
  timestamp            DateTime
  hubspotOwnerId       String?
  taskCompletionDate   DateTime?
  taskIsCompleted      Boolean @default(false)
  taskDuration         String?
  taskReminders        String?
  taskForObjectType    String?
  taskContactTimezone  String?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  leadId               String?
  lead                 Lead?    @relation(fields: [leadId], references: [id])
  contactId            String?
  contact              HubSpotContact? @relation(fields: [contactId], references: [id])

  @@map("hubspot_tasks")
}

model HubSpotEmail {
  id                    String   @id @default(cuid())
  hubspotId            String   @unique
  emailSubject         String
  emailHtml            String?
  emailText            String?
  emailDirection       String
  emailStatus          String
  timestamp            DateTime
  hubspotOwnerId       String?
  emailFromEmail       String?
  emailFromFirstname   String?
  emailFromLastname    String?
  emailToEmail         String?
  emailToFirstname     String?
  emailToLastname      String?
  emailCc              String?
  emailBcc             String?
  emailReplyTo         String?
  emailMessageId       String?
  emailThreadId        String?
  emailTrackerKey      String?
  emailOpenCount       String?
  emailClickCount      String?
  emailReplyCount      String?
  emailBounceCount     String?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  leadId               String?
  lead                 Lead?    @relation(fields: [leadId], references: [id])
  contactId            String?
  contact              HubSpotContact? @relation(fields: [contactId], references: [id])

  @@map("hubspot_emails")
}

model HubSpotCall {
  id                    String   @id @default(cuid())
  hubspotId            String   @unique
  callBody             String?
  callCalleeObjectId   String
  callCalleeObjectType String
  callDirection        String
  callDisposition      String
  callDuration         String?
  callFromNumber       String?
  callRecordingUrl     String?
  callSource           String
  callStatus           String
  callTitle            String
  callToNumber         String?
  timestamp            DateTime
  hubspotOwnerId       String?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  leadId               String?
  lead                 Lead?    @relation(fields: [leadId], references: [id])
  contactId            String?
  contact              HubSpotContact? @relation(fields: [contactId], references: [id])

  @@map("hubspot_calls")
}

model HubSpotMeeting {
  id                    String   @id @default(cuid())
  hubspotId            String   @unique
  meetingTitle         String
  meetingBody          String?
  meetingStartTime     DateTime
  meetingEndTime       DateTime
  meetingLocation      String?
  meetingOutcome       String
  meetingSource        String
  meetingSourceId      String?
  timestamp            DateTime
  hubspotOwnerId       String?
  meetingExternalUrl   String?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  leadId               String?
  lead                 Lead?    @relation(fields: [leadId], references: [id])
  contactId            String?
  contact              HubSpotContact? @relation(fields: [contactId], references: [id])

  @@map("hubspot_meetings")
}

model HubSpotNote {
  id                    String   @id @default(cuid())
  hubspotId            String   @unique
  noteBody             String
  timestamp            DateTime
  hubspotOwnerId       String?
  attachmentIds        String?
  noteBodyPreview      String?
  createdByUserId      String?
  modifiedByUserId     String?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  leadId               String?
  lead                 Lead?    @relation(fields: [leadId], references: [id])
  contactId            String?
  contact              HubSpotContact? @relation(fields: [contactId], references: [id])

  @@map("hubspot_notes")
}

model HubSpotTicket {
  id                    String   @id @default(cuid())
  hubspotId            String   @unique
  ticketId             String
  subject              String
  content              String?
  ticketPriority       String   @default("MEDIUM")
  ticketCategory       String?
  pipelineStage        String?
  pipeline             String?
  hubspotOwnerId       String?
  createDate           DateTime?
  lastModifiedDate     DateTime?
  closedDate           DateTime?
  timeToClose          String?
  timeToFirstAgentReply String?
  numTimesContacted    String?
  ticketSource         String?
  resolution           String?
  ticketSubcategory    String?
  sourceType           String?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("hubspot_tickets")
}

model HubSpotDocument {
  id                    String   @id @default(cuid())
  hubspotId            String   @unique
  fileName             String
  fileType             String
  fileUrl              String
  uploadDate           DateTime
  lastViewedDate       DateTime?
  totalViews           Int      @default(0)
  uniqueViews          Int      @default(0)
  averageViewTime      Int      @default(0) // seconds
  totalViewTime        Int      @default(0) // seconds
  downloadCount        Int      @default(0)
  shareCount           Int      @default(0)
  engagementScore      Float    @default(0)
  
  // Analytics
  viewingSessions      Json?
  pageAnalytics        Json?
  insights             Json?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  contactId            String?
  contact              HubSpotContact? @relation(fields: [contactId], references: [id])

  @@map("hubspot_documents")
}

model HubSpotSocialInsight {
  id                    String   @id @default(cuid())
  contactId            String
  platform             String // 'LINKEDIN', 'TWITTER', 'FACEBOOK'
  profileUrl           String?
  headline             String?
  location             String?
  industry             String?
  connectionCount      Int      @default(0)
  followersCount       Int      @default(0)
  recentActivity       Json?
  mutualConnections    Json?
  companyInsights      Json?
  contentInteractions  Json?
  salesNavigatorData   Json?
  
  // Timing insights
  bestContactTime      String?
  bestContactDay       String?
  bestContactMethod    String?
  
  // Warming opportunities
  warmingOpportunities Json?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  contact              HubSpotContact @relation(fields: [contactId], references: [id])

  @@map("hubspot_social_insights")
}

model HubSpotAnalytics {
  id                    String   @id @default(cuid())
  reportType           String
  dateRange            String
  totalContacts        Int      @default(0)
  totalCompanies       Int      @default(0)
  totalDeals           Int      @default(0)
  totalRevenue         Float    @default(0)
  averageDealSize      Float    @default(0)
  winRate              Float    @default(0)
  salesCycleLength     Float    @default(0)
  leadsThisMonth       Int      @default(0)
  dealsThisMonth       Int      @default(0)
  revenueThisMonth     Float    @default(0)
  conversionRates      Json?
  pipelineMetrics      Json?
  activityMetrics      Json?
  sourceAttribution    Json?
  monthlyTrends        Json?
  
  // Timestamps
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@map("hubspot_analytics")
}

// ========================================================================================
// AI ANALYSIS MODELS
// ========================================================================================

model ConversationAnalysis {
  id                      String   @id @default(cuid())
  leadId                  String
  contactId               String?
  analysisDate            DateTime @default(now())
  
  // Sentiment Analysis
  sentimentScore          Float    @default(0) // -1 to 1
  sentimentConfidence     Float    @default(0) // 0 to 1
  sentimentTrend          String   @default("stable") // 'improving' | 'declining' | 'stable'
  sentimentHistory        String? // JSON array
  
  // Intent Analysis
  buyingSignals           Int      @default(0) // 0-100
  objections              Int      @default(0) // 0-100
  interestLevel           Int      @default(0) // 0-100
  urgency                 Int      @default(0) // 0-100
  budgetMentions          Int      @default(0) // 0-100
  authorityIndicators     Int      @default(0) // 0-100
  
  // Keywords
  positiveKeywords        String? // JSON array
  negativeKeywords        String? // JSON array
  technicalKeywords       String? // JSON array
  businessKeywords        String? // JSON array
  urgencyKeywords         String? // JSON array
  budgetKeywords          String? // JSON array
  
  // Conversation Quality
  responseTimeAvg         Float    @default(0) // horas
  messageLengthAvg        Int      @default(0) // caracteres
  questionRatio           Float    @default(0) // porcentaje
  engagementScore         Int      @default(0) // 0-100
  
  // Predictions
  conversionProbability   Int      @default(0) // 0-100
  optimalFollowupTime     DateTime?
  recommendedAction       String   @default("EMAIL") // 'CALL' | 'EMAIL' | 'MEETING' | 'PROPOSAL' | 'NURTURE' | 'DISQUALIFY'
  predictionConfidence    Int      @default(0) // 0-100
  
  // Metadata
  analysisVersion         String   @default("1.0")
  processingTimeMs        Int?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  
  lead                    Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@index([leadId])
  @@index([contactId])
  @@index([analysisDate])
  @@index([conversionProbability])
  @@index([recommendedAction])
  @@map("conversation_analyses")
}

// ========================================================================================
// LEAD SCORING MODELS
// ========================================================================================

model LeadScore {
  id                        String   @id @default(cuid())
  leadId                    String
  totalScore                Int      @default(0) // 0-100
  previousScore             Int?
  scoreChange               Int      @default(0)
  confidence                Int      @default(0) // 0-100
  category                  String   @default("COLD") // 'HOT' | 'WARM' | 'COLD' | 'QUALIFIED' | 'NURTURE' | 'DISQUALIFIED'
  
  // ICP Alignment Factors (30% weight)
  icpCompanySize            Int      @default(0) // 0-25
  icpIndustry               Int      @default(0) // 0-25
  icpRole                   Int      @default(0) // 0-25
  icpGeography              Int      @default(0) // 0-15
  icpTechnology             Int      @default(0) // 0-10
  
  // AI Conversation Analysis (25% weight)
  aiBuyingSignals           Int      @default(0) // 0-30
  aiInterestLevel           Int      @default(0) // 0-25
  aiSentiment               Int      @default(0) // 0-20
  aiUrgency                 Int      @default(0) // 0-15
  aiAuthority               Int      @default(0) // 0-10
  
  // HubSpot Engagement (25% weight)
  emailEngagement           Int      @default(0) // 0-30
  activityFrequency         Int      @default(0) // 0-25
  responseVelocity          Int      @default(0) // 0-20
  contentInteraction        Int      @default(0) // 0-15
  meetingAcceptance         Int      @default(0) // 0-10
  
  // Data Quality (20% weight)
  profileCompleteness       Int      @default(0) // 0-25
  dataFreshness             Int      @default(0) // 0-25
  contactReachability       Int      @default(0) // 0-25
  informationAccuracy       Int      @default(0) // 0-25
  
  // Metadata
  recommendedActions        String? // JSON array
  scoringNotes              String?
  calculatedAt              DateTime @default(now())
  expiresAt                 DateTime
  scoringVersion            String   @default("1.0")
  processingTimeMs          Int?
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  
  lead                      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@index([leadId])
  @@index([totalScore])
  @@index([category])
  @@index([calculatedAt])
  @@index([expiresAt])
  @@map("lead_scores")
}

// ========================================================================================
// SYNC AND CONFIGURATION MODELS
// ========================================================================================

model HubSpotSyncStatus {
  id                 String   @id @default(cuid())
  syncType           String // 'CONTACTS' | 'CONVERSATIONS' | 'ACTIVITIES' | 'DEALS' | 'COMPANIES'
  status             String   @default("PENDING") // 'PENDING' | 'RUNNING' | 'COMPLETED' | 'FAILED' | 'CANCELLED'
  startedAt          DateTime @default(now())
  completedAt        DateTime?
  recordsProcessed   Int      @default(0)
  recordsTotal       Int      @default(0)
  errors             String? // JSON array
  progressPercentage Int      @default(0)
  syncVersion        String   @default("1.0")
  triggeredBy        String? // user ID or 'SYSTEM'
  metadata           String? // JSON object
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@index([syncType])
  @@index([status])
  @@index([startedAt])
  @@index([completedAt])
  @@map("hubspot_sync_status")
}

model SystemConfiguration {
  id                 String   @id @default(cuid())
  key                String   @unique
  value              String
  type               String   @default("STRING") // 'STRING' | 'NUMBER' | 'BOOLEAN' | 'JSON'
  description        String?
  category           String   @default("GENERAL") // 'HUBSPOT' | 'AI' | 'SCORING' | 'GENERAL'
  isEncrypted        Boolean  @default(false)
  isEditable         Boolean  @default(true)
  validationRegex    String?
  defaultValue       String?
  lastModifiedBy     String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@index([key])
  @@index([category])
  @@map("system_configuration")
}

// ========================================================================================
// ENUMS
// ========================================================================================

enum LeadStatus {
  NEW
  ENRICHED
  VALIDATED
  PRIORITIZED
  CONTACTED
  CONVERTED
  LOST
}

enum LeadSource {
  HUBSPOT
  MANUAL
  IMPORT
  API
  WEBSITE
  REFERRAL
}

enum UserRole {
  ADMIN
  MANAGER
  USER
  VIEWER
}

enum EnrichmentStatus {
  PENDING
  SUCCESS
  FAILED
  RATE_LIMITED
}

// OpenAI Integration Models
model OpenAIConfig {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  apiKey      String   // Encrypted
  model       String   @default("gpt-4o")
  temperature Float    @default(0.7)
  maxTokens   Int      @default(1000)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("openai_config")
}

model PromptTemplate {
  id          String         @id @default(cuid())
  userId      String
  name        String
  description String?
  category    PromptCategory @default(ANALYSIS)
  template    String
  variables   String? // JSON array of variable names
  isActive    Boolean        @default(true)
  isDefault   Boolean        @default(false)
  usageCount  Int            @default(0)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([category])
  @@index([isActive])
  @@map("prompt_templates")
}

model AIGeneration {
  id            String         @id @default(cuid())
  userId        String
  leadId        String?
  type          GenerationType
  prompt        String
  response      String
  model         String         @default("gpt-4o")
  temperature   Float          @default(0.7)
  maxTokens     Int            @default(1000)
  tokensUsed    Int?
  cost          Float?
  processingMs  Int?
  metadata      String? // JSON
  createdAt     DateTime       @default(now())
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  lead          Lead?          @relation(fields: [leadId], references: [id], onDelete: SetNull)

  @@index([userId])
  @@index([leadId])
  @@index([type])
  @@index([createdAt])
  @@map("ai_generations")
}

model AIInsight {
  id          String      @id @default(cuid())
  leadId      String
  type        InsightType
  title       String
  content     String
  confidence  Float       @default(0) // 0-1
  actionable  Boolean     @default(false)
  priority    String      @default("MEDIUM") // 'LOW' | 'MEDIUM' | 'HIGH'
  source      String      @default("AI") // 'AI' | 'MANUAL' | 'SYSTEM'
  metadata    String? // JSON
  createdAt   DateTime    @default(now())
  lead        Lead        @relation(fields: [leadId], references: [id], onDelete: Cascade)

  @@index([leadId])
  @@index([type])
  @@index([actionable])
  @@index([priority])
  @@map("ai_insights")
}

model AIConversation {
  id        String                   @id @default(cuid())
  userId    String
  title     String                   @default("New Conversation")
  model     String                   @default("gpt-4o")
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @updatedAt
  user      User                     @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  AIConversationMessage[]

  @@index([userId])
  @@index([createdAt])
  @@map("ai_conversations")
}

model AIConversationMessage {
  id             String         @id @default(cuid())
  conversationId String
  role           MessageRole
  content        String
  tokensUsed     Int?
  createdAt      DateTime       @default(now())
  conversation   AIConversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@index([conversationId])
  @@index([createdAt])
  @@map("ai_conversation_messages")
}

model AIUsageStats {
  id               String   @id @default(cuid())
  userId           String
  date             DateTime @default(now())
  totalTokens      Int      @default(0)
  totalCost        Float    @default(0)
  requestCount     Int      @default(0)
  avgResponseTime  Float    @default(0)
  errorCount       Int      @default(0)
  model            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, date])
  @@index([userId])
  @@index([date])
  @@map("ai_usage_stats")
}

enum PromptCategory {
  ANALYSIS
  GENERATION
  CLASSIFICATION
  EXTRACTION
  CONVERSATION
  SCORING
  PERSONALIZATION
  OTHER
}

enum GenerationType {
  EMAIL
  MESSAGE
  ANALYSIS
  SUMMARY
  PERSONALIZATION
  CLASSIFICATION
  EXTRACTION
  OTHER
}

enum InsightType {
  BEHAVIORAL
  ENGAGEMENT
  SENTIMENT
  OPPORTUNITY
  RISK
  PREDICTION
  RECOMMENDATION
  OTHER
}

enum MessageRole {
  USER
  ASSISTANT
  SYSTEM
}

// Ejemplo de claves para APIs globales:
// key: 'OPENAI_API_KEY', type: 'STRING', category: 'AI', isEncrypted: true
// key: 'OPENAI_MODEL', type: 'STRING', category: 'AI'
// key: 'OPENAI_TEMPERATURE', type: 'NUMBER', category: 'AI'
// key: 'OPENAI_MAX_TOKENS', type: 'NUMBER', category: 'AI'
// key: 'OPENAI_IS_ACTIVE', type: 'BOOLEAN', category: 'AI'
// key: 'HUBSPOT_API_KEY', type: 'STRING', category: 'HUBSPOT', isEncrypted: true
// key: 'HUBSPOT_ENV', type: 'STRING', category: 'HUBSPOT'
// key: 'HUBSPOT_ACCOUNT_NAME', type: 'STRING', category: 'HUBSPOT'
// key: 'CLEARBIT_API_KEY', type: 'STRING', category: 'CLEARBIT', isEncrypted: true
// key: 'CLEARBIT_NAME', type: 'STRING', category: 'CLEARBIT'
// key: 'HUNTERIO_API_KEY', type: 'STRING', category: 'HUNTERIO', isEncrypted: true
// key: 'HUNTERIO_NAME', type: 'STRING', category: 'HUNTERIO'
// key: 'MAILBOXLAYER_API_KEY', type: 'STRING', category: 'MAILBOXLAYER', isEncrypted: true
// key: 'MAILBOXLAYER_NAME', type: 'STRING', category: 'MAILBOXLAYER'

// ========================================================================================
// TASK MANAGEMENT SYSTEM
// ========================================================================================

model TaskTemplate {
  id               String           @id @default(cuid())
  name             String
  description      String?
  category         TaskCategory
  type             TaskType
  priority         TaskPriority     @default(MEDIUM)
  estimatedDuration Int             @default(30) // minutes
  
  // Template content
  defaultSubject   String
  defaultMessage   String?          @db.Text
  emailTemplate    String?          @db.Text
  callScript       String?          @db.Text
  
  // AI suggestions
  bestTimeSlots    Json?            // Array of optimal time slots
  successTags      String[]         // Tags that indicate success
  
  // Metadata
  isActive         Boolean          @default(true)
  usageCount       Int              @default(0)
  successRate      Float            @default(0)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  
  // Relations
  tasks            Task[]

  @@map("task_templates")
}

model Task {
  id                    String           @id @default(cuid())
  
  // Basic info
  subject               String
  description           String?          @db.Text
  category              TaskCategory
  type                  TaskType
  priority              TaskPriority     @default(MEDIUM)
  status                TaskStatus       @default(DRAFT)
  
  // Scheduling
  scheduledDate         DateTime?
  scheduledTime         String?          // "09:30"
  estimatedDuration     Int              @default(30) // minutes
  timezone              String           @default("Europe/Madrid")
  
  // AI Generated Content
  aiGeneratedEmail      String?          @db.Text
  aiGeneratedScript     String?          @db.Text
  aiGeneratedComment    String?          @db.Text
  aiConfidenceScore     Float            @default(0) // 0-1
  
  // Custom content (user can override AI)
  customMessage         String?          @db.Text
  customNotes           String?          @db.Text
  
  // Targeting
  leadId                String?
  contactEmail          String
  contactName           String?
  companyName           String?
  
  // Workflow
  approvedBy            String?          // User ID
  approvedAt            DateTime?
  rejectedReason        String?
  
  // HubSpot Integration
  hubspotTaskId         String?          @unique
  syncedToHubspot       Boolean          @default(false)
  syncedAt              DateTime?
  syncError             String?
  
  // Performance tracking
  completed             Boolean          @default(false)
  completedAt           DateTime?
  outcome               TaskOutcome?
  responseReceived      Boolean          @default(false)
  responseTime          Int?             // hours until response
  conversionValue       Float?           // revenue attributed
  
  // AI Insights
  successProbability    Float            @default(0) // 0-1
  bestContactDay        String?          // "MONDAY"
  bestContactTime       String?          // "09:00"
  personalityInsights   Json?
  
  // Relations
  templateId            String?
  template              TaskTemplate?    @relation(fields: [templateId], references: [id])
  leadId2               String?
  lead                  Lead?            @relation(fields: [leadId2], references: [id])
  assignedToId          String
  assignedTo            User             @relation(fields: [assignedToId], references: [id])
  
  // Follow-up chain
  parentTaskId          String?
  parentTask            Task?            @relation("TaskFollowUp", fields: [parentTaskId], references: [id])
  followUpTasks         Task[]           @relation("TaskFollowUp")
  
  // Attachments
  attachments           TaskAttachment[]
  
  // A/B Testing
  abTestGroup           String?          // "A" | "B" | "CONTROL"
  abTestId              String?
  
  // Metadata
  createdAt             DateTime         @default(now())
  updatedAt             DateTime         @updatedAt

  @@index([status])
  @@index([scheduledDate])
  @@index([priority])
  @@index([assignedToId])
  @@index([leadId2])
  @@index([syncedToHubspot])
  @@index([category])
  @@index([type])
  @@map("tasks")
}

model TaskAttachment {
  id          String   @id @default(cuid())
  taskId      String
  fileName    String
  fileType    String
  fileUrl     String
  fileSize    Int      // bytes
  uploadedAt  DateTime @default(now())
  
  task        Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@map("task_attachments")
}

model TaskABTest {
  id                String    @id @default(cuid())
  name              String
  description       String?
  status            ABTestStatus @default(DRAFT)
  
  // Test configuration
  trafficSplit      Float     @default(0.5) // 50/50 split
  startDate         DateTime?
  endDate           DateTime?
  minSampleSize     Int       @default(100)
  
  // Variants
  variantAName      String    @default("Variant A")
  variantBName      String    @default("Variant B")
  variantATemplate  String    @db.Text
  variantBTemplate  String    @db.Text
  
  // Results
  variantAConversions Int     @default(0)
  variantBConversions Int     @default(0)
  variantASent        Int     @default(0)
  variantBSent        Int     @default(0)
  
  // Statistics
  confidenceLevel   Float?   // 0-1
  pValue           Float?
  winningVariant   String?  // "A" | "B" | "INCONCLUSIVE"
  
  // Metadata
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("task_ab_tests")
}

model TaskPerformanceMetrics {
  id                    String           @id @default(cuid())
  
  // Time period
  date                  DateTime         @db.Date
  
  // Task metrics
  totalTasks            Int              @default(0)
  completedTasks        Int              @default(0)
  approvedTasks         Int              @default(0)
  rejectedTasks         Int              @default(0)
  syncedTasks           Int              @default(0)
  
  // Response metrics
  totalResponses        Int              @default(0)
  avgResponseTime       Float            @default(0) // hours
  conversionRate        Float            @default(0) // 0-1
  
  // Revenue metrics
  totalRevenue          Float            @default(0)
  avgRevenuePerTask     Float            @default(0)
  
  // AI metrics
  aiUsageRate           Float            @default(0) // % of tasks using AI
  aiSuccessRate         Float            @default(0) // AI prediction accuracy
  
  // Performance by category
  emailTasksPerformance Json?
  callTasksPerformance  Json?
  meetingTasksPerformance Json?
  
  // Metadata
  createdAt             DateTime         @default(now())
  updatedAt             DateTime         @updatedAt

  @@unique([date])
  @@map("task_performance_metrics")
}

model TaskAutomationRule {
  id                String              @id @default(cuid())
  name              String
  description       String?
  isActive          Boolean             @default(true)
  
  // Trigger conditions
  triggerEvent      AutomationTrigger
  triggerConditions Json                // Complex conditions
  
  // Actions
  actions           Json                // Array of actions to perform
  
  // Scheduling
  scheduleType      ScheduleType        @default(IMMEDIATE)
  scheduleDelay     Int?                // minutes
  scheduleTime      String?             // "09:00"
  scheduleDays      String[]            // ["MONDAY", "WEDNESDAY"]
  
  // Performance
  executionCount    Int                 @default(0)
  successCount      Int                 @default(0)
  lastExecuted      DateTime?
  
  // Metadata
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt

  @@map("task_automation_rules")
}

// ========================================================================================
// TASK MANAGEMENT ENUMS
// ========================================================================================

enum TaskCategory {
  PROSPECTING
  FOLLOW_UP
  NURTURING
  CLOSING
  CUSTOMER_SUCCESS
  SUPPORT
  ADMINISTRATIVE
}

enum TaskType {
  EMAIL
  CALL
  MEETING
  LINKEDIN_MESSAGE
  WHATSAPP
  PROPOSAL
  DEMO
  FOLLOW_UP
  REMINDER
  NOTE
  RESEARCH
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
  CRITICAL
}

enum TaskStatus {
  DRAFT
  PENDING_APPROVAL
  APPROVED
  REJECTED
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum TaskOutcome {
  SUCCESS
  NO_RESPONSE
  DECLINED
  POSTPONED
  CONVERTED
  UNQUALIFIED
}

enum ABTestStatus {
  DRAFT
  RUNNING
  COMPLETED
  PAUSED
  CANCELLED
}

enum AutomationTrigger {
  LEAD_CREATED
  LEAD_SCORED
  EMAIL_OPENED
  EMAIL_CLICKED
  FORM_SUBMITTED
  DEAL_STAGE_CHANGED
  TASK_COMPLETED
  TIME_BASED
  MANUAL
}

enum ScheduleType {
  IMMEDIATE
  DELAYED
  SCHEDULED
  RECURRING
  SMART_TIMING
}
