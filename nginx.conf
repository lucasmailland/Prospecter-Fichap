events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Ocultar versión de nginx para seguridad
    server_tokens off;
    
    # Configuración de logs con información de seguridad
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'ssl_protocol=$ssl_protocol ssl_cipher=$ssl_cipher';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Configuración de performance y seguridad
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    client_body_timeout 12;
    client_header_timeout 12;
    
    # Prevenir ataques de buffer overflow
    client_body_buffer_size 1K;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    # Compresión gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        font/opentype;

    # Rate limiting mejorado
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Upstream para backend
    upstream backend {
        server backend:3000;
        keepalive 32;
    }

    # Map para detectar user agents maliciosos
    map $http_user_agent $blocked_agent {
        default 0;
        ~*malicious 1;
        ~*attack 1;
        ~*hack 1;
        ~*scan 1;
        ~*bot 1;
        "" 1;  # User agent vacío
    }

    # Map para Content Security Policy dinámico
    map $request_uri $csp_policy {
        default "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none'; base-uri 'self'; form-action 'self';";
        ~*/api/ "default-src 'none'; frame-ancestors 'none';";
    }

    # Configuración del servidor HTTP (SOLO redirección a HTTPS - NO cleartext)
    server {
        listen 80;
        server_name _;
        
        # Headers de seguridad incluso en redirección
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        
        # Redirección OBLIGATORIA a HTTPS - previene cleartext transmission
        return 301 https://$server_name$request_uri;
    }

    # Configuración del servidor HTTPS - ÚNICO método de comunicación permitido
    server {
        listen 443 ssl http2;
        server_name _;
        
        # Bloquear user agents maliciosos
        if ($blocked_agent) {
            return 403;
        }
        
        # SSL Configuration - MÁS ESTRICTA
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;  # Solo versiones seguras
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;  # Mejorar forward secrecy
        
        # OCSP Stapling para mejor seguridad SSL
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # Headers de seguridad MEJORADOS - prevenir XSS y otras vulnerabilidades
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy $csp_policy always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        add_header X-Download-Options "noopen" always;
        add_header X-DNS-Prefetch-Control "off" always;
        
        # Remover headers que revelan información del servidor
        more_clear_headers 'Server';
        more_clear_headers 'X-Powered-By';
        add_header Server "Prospecter-Secure" always;

        # Limitar conexiones simultáneas
        limit_conn addr 10;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API routes - rate limiting ESTRICTO
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Validación adicional para APIs
            if ($request_method !~ ^(GET|POST|PUT|DELETE|PATCH|OPTIONS)$) {
                return 405;
            }
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Headers de seguridad para API
            proxy_set_header X-Content-Type-Options "nosniff";
            proxy_set_header X-Frame-Options "DENY";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Ocultar headers del backend
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
        }

        # Métricas - ACCESO MUY RESTRINGIDO
        location /metrics {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Bloquear acceso a archivos sensibles
        location ~* \.(env|git|svn|htaccess|htpasswd|ini|log|sh|sql|tar|gz)$ {
            deny all;
            return 404;
        }

        # Bloquear acceso a directorios sensibles
        location ~* /(\.git|\.svn|\.env|node_modules|\.npm) {
            deny all;
            return 404;
        }

        # Static files con cache SEGURO
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            add_header X-Content-Type-Options "nosniff";
            access_log off;
        }

        # Next.js static files
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            add_header X-Content-Type-Options "nosniff";
            access_log off;
        }

        # Fallback para SPA con rate limiting
        location / {
            limit_req zone=general burst=50 nodelay;
            try_files $uri $uri/ /index.html;
            
            # Headers adicionales para páginas HTML
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
        }

        # Configuración de error pages SEGURAS
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
            add_header X-Content-Type-Options "nosniff";
        }
        
        location = /404.html {
            root /usr/share/nginx/html;
            add_header X-Content-Type-Options "nosniff";
        }
    }
} 